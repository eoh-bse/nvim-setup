{
  "webcomponent": {
    "description": "Web Component Template",
    "scope": "typescript",
    "prefix": "webcomponent",
    "body": [
      "class ${Component} extends HTMLElement {",
      "  private static readonly observedProps: readonly string[] = [];",
      "  private static readonly propsSet: Set<string> = new Set();",
      "  private readonly props: ${Component}Props = { };",
      "",
      "  constructor() {",
      "    super();",
      "",
      "    this.attachShadow({ mode: \"open\" });",
      "",
      "    this.render();",
      "    this.registerElements();",
      "    this.registerEventListeners();",
      "  }",
      "",
      "  getHtml(): string {",
      "    return `",
      "      <div>",
      "      </div>",
      "    `.trim();",
      "  }",
      "",
      "  static get observedAttributes(): readonly string[] {",
      "    return ${Component}.observedProps;",
      "  }",
      "",
      "  attributeChangedCallback(property: string, oldValue: any, newValue: any): void {",
      "    if (oldValue === newValue)",
      "      return;",
      "",
      "    if (${Component}.propsSet.has(property))",
      "      this.props[property] = newValue;",
      "  }",
      "",
      "  connectedCallback(): void {",
      "  }",
      "",
      "  registerElements(): void {",
      "  }",
      "",
      "  registerEventListeners(): void {",
      "  }",
      "",
      "  onClick(): void {",
      "  }",
      "",
      "  render(): void {",
      "    if (!this.isConnected)",
      "      return;",
      "",
      "    this.shadowRoot.innerHTML = this.getHtml();",
      "  }",
      "}",
      "",
      "customElements.define('component', ${Component});"
    ]
  }
}
